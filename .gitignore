# Law Firm AI Project - .gitignore

# ========================
# SENSITIVE & SECRET FILES
# ========================

# Environment variables (CRITICAL - contains OpenAI API keys)
.env
.env.local
.env.development
.env.test
.env.production
.env.staging
*.env

# API Keys and secrets
api_keys.txt
secrets.json
config/secrets.py
*.key
*.pem
*.p12
*.pfx

# Client data and case files (HIPAA/Legal compliance)
client_data/
cases/
legal_documents/
sensitive_data/
test_data_real/

# ========================
# PYTHON SPECIFIC
# ========================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ========================
# AI & MACHINE LEARNING
# ========================

# Model files
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.onnx
*.tflite
models/
checkpoints/
saved_models/

# LangChain cache
.langchain/
langchain_cache/

# OpenAI cache
.openai_cache/
openai_logs/

# Vector databases
*.faiss
*.chroma
vector_db/
embeddings/

# Training data
training_data/
datasets/
data/raw/
data/processed/

# ========================
# OPERATING SYSTEM
# ========================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ========================
# DEVELOPMENT TOOLS
# ========================

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
.history/
*.vsix

# Local History for Visual Studio Code
.history/
.ionide/

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
[._]*.s[a-v][a-z]
!*.svg
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
*~
tags
[._]*.un~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ========================
# WEB & FRONTEND
# ========================

# Node.js (if you add a web frontend)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
package-lock.json
yarn.lock

# ========================
# DATABASE
# ========================

# SQLite
*.sqlite
*.sqlite3
*.db

# PostgreSQL
*.sql

# ========================
# LOGS & TEMPORARY FILES
# ========================

# Log files
*.log
logs/
log/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Temporary files
tmp/
temp/
.tmp/
*.tmp
*.temp
*.swp
*.swo

# Backup files
*.bak
*.backup
*.orig

# ========================
# TESTING & DEBUG
# ========================

# Test files with real data
test_real_data/
debug_logs/
test_outputs/
debug_*.py
*_debug.py
test_*.py
*_test.py

# Performance profiling
*.prof
*.profile

# ========================
# DOCUMENTATION
# ========================

# Generated documentation
docs/build/
site/

# ========================
# DEPLOYMENT
# ========================

# Docker
.dockerignore
Dockerfile.local
docker-compose.override.yml

# Kubernetes
*.yaml.local
*.yml.local

# Heroku
.slugignore

# ========================
# PROJECT SPECIFIC
# ========================

# Old/backup versions
*_old.py
*_backup.py
*_copy.py
old/
backup/

# Client communication logs (sensitive)
communication_logs/
message_history/
client_conversations/

# Generated test files
test_*.py
debug_*.py
*_test_*.py

# Streaming examples and tests
streaming_*.py
test_streaming.py
test_human_delay.py

# Configuration backups
config_backup/
settings_backup/

# Local development files
local_*.py
dev_*.py
development_*.py
